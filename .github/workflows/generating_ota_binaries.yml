# This is a basic workflow to help you get started with Actions

name: Building OTA binaries on GitHub

# Controls when the workflow will run
on:
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: 
     [feature/git_action_test]
  push:
    branches:
      [feature/git_action_test]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_ota_binaries:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
         
    env:
     run: |
        echo $PWD
        value=`cat $PWD/esp32_firmware/main/version.h`
        echo "$value"
        version="$( cut -d '"' -f 2 <<< "$value" )"
        echo "$version"     
     version: "$version"
 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          submodules: true         
        
#      - name: esp-idf build
#        uses: espressif/esp-idf-ci-action@v1
#        with:
#         esp_idf_version: v4.3.2
#         target: esp32c3
#         path: ./esp32_firmware    
     
 
    #Add the files to the folder
     - name: Copy the files in temporary folder       
       run: |
        echo "${{ env.version }}"
        mkdir ota_binaries_${{ env.version }}       
   #     cp esp32_firmware/build/bootloader/bootloader.bin ota_binaries_${{ env.version }}
   #     cp esp32_firmware/build/partition_table/partition-table.bin ota_binaries_${{ env.version }}        
    #    cp esp32_firmware/build/blink.bin ota_binaries_${{ env.version }}
     #   cp esp32_firmware/build/blink.elf ota_binaries_${{ env.version }}
        
#      - name: Edit the file names
#        run: |        
#         cd ota_binaries_${{ env.version }}                
#         mv bootloader.bin obnizos__blewifi__gw2__${{ env.version }}__bootloader.bin
#         mv partition-table.bin obnizos__blewifi_gw2__${{ env.version }}__partition.bin
#         mv blink.bin obnizos__blewifi__gw2__${{ env.version }}.bin
#         mv blink.elf obnizos__blewifi__gw2__${{ env.version }}.elf
       
#      - name: Check current path
#        run: |
#         echo "$PWD"
    
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v3.0.0
#        with:
#           name: ota_binaries_${{ env.version }}
#           path:            
#             ota_binaries_${{ env.version }}
#           if-no-files-found: error
#           retention-days: 1
#           # Delete dummy directory
#      - name: Delete the dummy directory
#        run:
#         rm -r ota_binaries_${{ env.version }}
     
       
