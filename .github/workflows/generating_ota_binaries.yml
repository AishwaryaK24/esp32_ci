# This is a basic workflow to help you get started with Actions

name: Building OTA binaries on GitHub

# Controls when the workflow will run
on:
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_ota_binaries:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     - name: Checkout
       uses: actions/checkout@v3
       with:
         submodules: recursive
    #  - name: Change to project
    #    run: |
    #      echo $PWD
    #      cd /home/runner/work/esp32_ci/esp32_ci/esp32_firmware
         
      # Runs a single command using the runners shell
     
  inputs:
    path:
      description: 'Relative path under $GITHUB_WORKSPACE to place the repository'
      default: ''
      required: false
    esp_idf_version:
      description: 'Version of ESP-IDF docker image to use'
      default: 'latest'
      required: false
    target:
      description: 'ESP32 variant to build for'
      default: 'esp32c3'
      required: false
  command:
    description: 'Command to run inside the docker container (default: builds the project)'
    default: 'idf.py build'
    required: false

runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.path }}
    # - name: Include esp-idf binaries
    #    uses: docker
    #    with:         
    #       args: idf.py build    
    
      # Upload the binaries
- name: Upload artifacts
  uses: actions/upload-artifact@v3.0.0
  with:
    name: ota_binaries
    path:
      esp32_firmware/build/bootloader/bootloader.bin
      esp32_firmware/build/partition_table/partition_table.bin
      esp32_firmware/build/blink.elf
      esp32_firmware/build/blink.bin
      if-no-files-found: error
      retention-days: 1
       
